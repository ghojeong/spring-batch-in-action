plugins {
    id "java"
    id "org.springframework.boot" version "2.6.15"
    id "io.spring.dependency-management" version "1.1.3"
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

java {
    sourceCompatibility = 11
    archivesBaseName = "batch"
}

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://jitpack.io" }
}

apply plugin: "io.spring.dependency-management"

dependencies {
    // spring
    implementation "org.springframework:spring-web"
    implementation("org.springframework.boot:spring-boot-starter-batch")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")

    // test
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.springframework.batch:spring-batch-test")

    // db
    implementation("com.h2database:h2")
    implementation("mysql:mysql-connector-java")
    implementation "org.mariadb.jdbc:mariadb-java-client"
    implementation("org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16")

    // querydsl
    implementation "com.querydsl:querydsl-jpa:5.0.0"
    implementation "com.querydsl:querydsl-core:5.0.0"
    implementation "com.querydsl:querydsl-sql-spring:5.0.0"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // lombok
    implementation "org.projectlombok:lombok"
    testImplementation "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"
}

test {
    useJUnitPlatform()
}

configurations {
    querydsl.extendsFrom compileClasspath
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

// querydsl 적용
def generated = "$buildDir/generated"
querydsl {
    jpa = true
    querydslSourcesDir = generated
}
sourceSets {
    main.java.srcDir generated
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
    dependsOn clean
}
